# GithHub Actions Workflow generated with Ghygen
# Original configuration: https://ghygen.hi-folks.dev?code=0d2aa3f4cf2f90a63cc1a71edf2f956a
name: Laravel application (Mysql)
on:
  pull_request:
    paths:
      - 'server/**'
    branches:
      - master
      - develop
      - feature/*
jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: server
    # Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
          MYSQL_USER: sail
          MYSQL_PASSWORD: password
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 3306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        php-versions: [ '7.4' ]
        dependency-stability: [ 'prefer-none' ]

    name: P${{ matrix.php-versions }} - Laravel${{ matrix.laravel }}

    steps:
      - uses: actions/checkout@v2
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - uses: reviewdog/action-setup@v1
        with:
            reviewdog_version: latest
      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
      - name: Install Dependencies
        run: composer install

      - name: Update Dependencies with latest stable
        if: matrix.dependency-stability == 'prefer-stable'
        run: composer update --prefer-stable
      - name: Update Dependencies with lowest stable
        if: matrix.dependency-stability == 'prefer-lowest'
        run: composer update --prefer-stable --prefer-lowest

      - name: Dump Autoload
        run: composer dump-autoload

      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        # Set environment
        env:
          DB_HOST: 127.0.0.1

        run: php artisan migrate

      - name: generate helper
        env:
          DB_HOST: 127.0.0.1
        run: php artisan ide-helper:generate & php artisan ide-helper:models -N

      # Code quality
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        # Set environment
        env:
          DB_HOST: 127.0.0.1

        run: vendor/bin/phpunit ./tests

      - name: Execute Code Sniffer via phpcs
        shell: sh
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          vendor/bin/phpcs --standard=PSR12 app --report=emacs | reviewdog -reporter=github-pr-review -efm='%f:%l:%c:%m'

      - name: Execute Code Static Analysis (PHP Stan + Larastan)
        shell: sh
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./vendor/bin/phpstan analyse --error-format=raw --no-progress | reviewdog -reporter=github-pr-review -f=phpstan